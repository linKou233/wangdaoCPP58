1a
线程函数返回：当线程函数执行完毕并返回时，线程会自动终止。
调用 pthread_exit：线程可以通过调用 pthread_exit 函数来显式地退出。这个函数会立即终止调用它的线程，并返回一个退出状态。
取消线程：其他线程可以通过调用 pthread_cancel 函数来取消一个线程。这会导致目标线程在下一个取消点（cancellation point）终止。
主线程返回或调用 exit：如

1b
调用 pthread_exit：当线程调用 pthread_exit 函数时，它的所有清理函数都会被调用。
响应取消请求：当线程响应一个取消请求并退出时，它的所有清理函数都会被调用。
调用 pthread_cleanup_pop：



5a
异步（Asynchronous）：异步是一种程序执行方式，其中任务的启动和完成不是线性执行的。在异步编程中，特定的子任务可以在不影响主任务的情况下独立运行。这意味着如果一个异步过程正在等待某些操作完成（例如，等待 I/O 操作），那么在这个等待期间，程序可以继续执行其他任务。
同步（Synchronous）：同步是一种程序执行方式，其中任务是按顺序一次执行一个的方式进行的。在同步编程中，一个任务必须完成后，下一个任务才能开始。如果一个同步过程在等待某些操作完成（例如，等待 I/O 操作），那么在这个等待期间，程序不能执行其他任务。
并发（Concurrency）：并发是指一个时间段内执行多个任务的能力。并发并不意味着这些任务是同时执行的。实际上，在单核 CPU 上，这些任务可能是交替执行的。并发主要在 I/O 密集型任务中有用，因为在等待 I/O 操作完成的同时，CPU 可以执行其他任务。
并行（Parallelism）：并行是指同时执行多个任务的能力。并行需要多核或多处理器的硬件支持。并行主要在 CPU 密集型任务中有用，因为它可以显著提高任务的执行速度。